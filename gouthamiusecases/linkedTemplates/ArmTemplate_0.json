{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "gouthamiusecases"
		},
		"AzureSqlDatabasecs3_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabasecs3'"
		},
		"destination_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'destination'"
		},
		"source_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'source'"
		},
		"AzureSqlDatabasecs3_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "gouthamiserver.database.windows.net"
		},
		"AzureSqlDatabasecs3_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "gouthamidb"
		},
		"AzureSqlDatabasecs3_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "gouthami"
		},
		"destination_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://azurestoragedatalake12.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabasecs3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabasecs3_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabasecs3_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabasecs3_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabasecs3_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/destination')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('destination_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('destination_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/source')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('source_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/2016medalscs2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "containercs2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Age",
						"type": "String"
					},
					{
						"name": "Height (cm)",
						"type": "String"
					},
					{
						"name": "Weight (kg)",
						"type": "String"
					},
					{
						"name": "Team",
						"type": "String"
					},
					{
						"name": "NOC",
						"type": "String"
					},
					{
						"name": "Games",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Season",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Sport",
						"type": "String"
					},
					{
						"name": "Event",
						"type": "String"
					},
					{
						"name": "Medal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTablecs3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabasecs3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmployeeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmployeeName",
						"type": "varchar"
					},
					{
						"name": "Gender",
						"type": "varchar"
					},
					{
						"name": "Location",
						"type": "varchar"
					},
					{
						"name": "Designation",
						"type": "varchar"
					},
					{
						"name": "Salary",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Employees"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabasecs3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/bronzecs2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "destination",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Bronze",
						"fileSystem": "datalakecontainercs2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Age",
						"type": "String"
					},
					{
						"name": "Height (cm)",
						"type": "String"
					},
					{
						"name": "Weight (kg)",
						"type": "String"
					},
					{
						"name": "Team",
						"type": "String"
					},
					{
						"name": "NOC",
						"type": "String"
					},
					{
						"name": "Games",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Season",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Sport",
						"type": "String"
					},
					{
						"name": "Event",
						"type": "String"
					},
					{
						"name": "Medal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/destination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/empcs3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "containercs3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EmployeeID",
						"type": "String"
					},
					{
						"name": "EmployeeName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Location",
						"type": "String"
					},
					{
						"name": "Designation",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/employeecs3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Employee_Details 3.csv",
						"container": "containercs3"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EmployeeID",
						"type": "String"
					},
					{
						"name": "EmployeeName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Location",
						"type": "String"
					},
					{
						"name": "Designation",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/employeedbcs3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabasecs3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmployeeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmployeeName",
						"type": "varchar"
					},
					{
						"name": "Gender",
						"type": "varchar"
					},
					{
						"name": "Location",
						"type": "varchar"
					},
					{
						"name": "Designation",
						"type": "varchar"
					},
					{
						"name": "Salary",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Employees"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabasecs3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/goldcs2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "destination",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Gold",
						"fileSystem": "datalakecontainercs2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Age",
						"type": "String"
					},
					{
						"name": "Height (cm)",
						"type": "String"
					},
					{
						"name": "Weight (kg)",
						"type": "String"
					},
					{
						"name": "Team",
						"type": "String"
					},
					{
						"name": "NOC",
						"type": "String"
					},
					{
						"name": "Games",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Season",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Sport",
						"type": "String"
					},
					{
						"name": "Event",
						"type": "String"
					},
					{
						"name": "Medal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/destination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/medalscs1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "source",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "containercs5"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Age",
						"type": "String"
					},
					{
						"name": "Height (cm)",
						"type": "String"
					},
					{
						"name": "Weight (kg)",
						"type": "String"
					},
					{
						"name": "Team",
						"type": "String"
					},
					{
						"name": "NOC",
						"type": "String"
					},
					{
						"name": "Games",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Season",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Sport",
						"type": "String"
					},
					{
						"name": "Event",
						"type": "String"
					},
					{
						"name": "Medal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/medalsdlcs1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "destination",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "datalakecontainercs5"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/destination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/silvercs2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "destination",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Silver",
						"fileSystem": "datalakecontainercs2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Age",
						"type": "String"
					},
					{
						"name": "Height (cm)",
						"type": "String"
					},
					{
						"name": "Weight (kg)",
						"type": "String"
					},
					{
						"name": "Team",
						"type": "String"
					},
					{
						"name": "NOC",
						"type": "String"
					},
					{
						"name": "Games",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Season",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Sport",
						"type": "String"
					},
					{
						"name": "Event",
						"type": "String"
					},
					{
						"name": "Medal",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/destination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinecasestudy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start time",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "status",
							"value": {
								"value": "@utcNow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy medal data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "start time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "destination",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Age",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Age",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Height (cm)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Height (cm)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Weight (kg)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Weight (kg)",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Team",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Team",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NOC",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NOC",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Games",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Games",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Season",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Season",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "City",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Sport",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Sport",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Event",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Event",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Medal",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Medal",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "medalscs1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "medalsdlcs1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "end time",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Copy medal data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "status",
							"value": {
								"value": "@utcNow()",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"status": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/medalscs1')]",
				"[concat(variables('factoryId'), '/datasets/medalsdlcs1')]",
				"[concat(variables('factoryId'), '/linkedServices/destination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinecasestudy3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "start time",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "status",
							"value": {
								"value": "@utcNow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy employee data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "start time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"validateDataConsistency": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "source",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Location",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Location",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Designation",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Designation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Salary",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Salary",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "empcs3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTablecs3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "end time",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Copy employee data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "status",
							"value": {
								"value": "@utcNow()",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"status": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/empcs3')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTablecs3')]",
				"[concat(variables('factoryId'), '/linkedServices/source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowcasestudy2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "2016medalscs2",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "goldcs2",
								"type": "DatasetReference"
							},
							"name": "goldsink"
						},
						{
							"dataset": {
								"referenceName": "silvercs2",
								"type": "DatasetReference"
							},
							"name": "silverSink"
						},
						{
							"dataset": {
								"referenceName": "bronzecs2",
								"type": "DatasetReference"
							},
							"name": "bronzeSink"
						}
					],
					"transformations": [
						{
							"name": "split1"
						},
						{
							"name": "split2"
						},
						{
							"name": "split3"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as string,",
						"          Name as string,",
						"          Gender as string,",
						"          Age as string,",
						"          {Height (cm)} as string,",
						"          {Weight (kg)} as string,",
						"          Team as string,",
						"          NOC as string,",
						"          Games as string,",
						"          Year as string,",
						"          Season as string,",
						"          City as string,",
						"          Sport as string,",
						"          Event as string,",
						"          Medal as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"split2@silver split(Medal==\"Gold\",",
						"     disjoint: false) ~> split1@(gold, goldstream)",
						"split3@bronze split(Medal==\"Silver\",",
						"     disjoint: false) ~> split2@(silver, silverstream)",
						"source1 split(Medal==\"Bronze\",",
						"     disjoint: false) ~> split3@(bronze, bronzestream)",
						"split1@gold sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as string,",
						"          Name as string,",
						"          Gender as string,",
						"          Age as string,",
						"          {Height (cm)} as string,",
						"          {Weight (kg)} as string,",
						"          Team as string,",
						"          NOC as string,",
						"          Games as string,",
						"          Year as string,",
						"          Season as string,",
						"          City as string,",
						"          Sport as string,",
						"          Event as string,",
						"          Medal as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> goldsink",
						"split2@silver sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as string,",
						"          Name as string,",
						"          Gender as string,",
						"          Age as string,",
						"          {Height (cm)} as string,",
						"          {Weight (kg)} as string,",
						"          Team as string,",
						"          NOC as string,",
						"          Games as string,",
						"          Year as string,",
						"          Season as string,",
						"          City as string,",
						"          Sport as string,",
						"          Event as string,",
						"          Medal as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> silverSink",
						"split3@bronze sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as string,",
						"          Name as string,",
						"          Gender as string,",
						"          Age as string,",
						"          {Height (cm)} as string,",
						"          {Weight (kg)} as string,",
						"          Team as string,",
						"          NOC as string,",
						"          Games as string,",
						"          Year as string,",
						"          Season as string,",
						"          City as string,",
						"          Sport as string,",
						"          Event as string,",
						"          Medal as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> bronzeSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2016medalscs2')]",
				"[concat(variables('factoryId'), '/datasets/goldcs2')]",
				"[concat(variables('factoryId'), '/datasets/silvercs2')]",
				"[concat(variables('factoryId'), '/datasets/bronzecs2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowcs2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "2016medalscs2",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "goldcs2",
								"type": "DatasetReference"
							},
							"name": "goldsink"
						},
						{
							"dataset": {
								"referenceName": "silvercs2",
								"type": "DatasetReference"
							},
							"name": "silversink"
						},
						{
							"dataset": {
								"referenceName": "bronzecs2",
								"type": "DatasetReference"
							},
							"name": "bronzesink"
						}
					],
					"transformations": [
						{
							"name": "split1"
						},
						{
							"name": "split2"
						},
						{
							"name": "split3"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as string,",
						"          Name as string,",
						"          Gender as string,",
						"          Age as string,",
						"          {Height (cm)} as string,",
						"          {Weight (kg)} as string,",
						"          Team as string,",
						"          NOC as string,",
						"          Games as string,",
						"          Year as string,",
						"          Season as string,",
						"          City as string,",
						"          Sport as string,",
						"          Event as string,",
						"          Medal as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"split2@silver split(Medal==\"gold\",",
						"     disjoint: false) ~> split1@(gold, goldstream)",
						"split3@bronze split(Medal==\"silver\",",
						"     disjoint: false) ~> split2@(silver, silverstream)",
						"source1 split(Medal==\"bronze\",",
						"     disjoint: false) ~> split3@(bronze, bronzestream)",
						"split1@gold sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as string,",
						"          Name as string,",
						"          Gender as string,",
						"          Age as string,",
						"          {Height (cm)} as string,",
						"          {Weight (kg)} as string,",
						"          Team as string,",
						"          NOC as string,",
						"          Games as string,",
						"          Year as string,",
						"          Season as string,",
						"          City as string,",
						"          Sport as string,",
						"          Event as string,",
						"          Medal as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> goldsink",
						"split2@silver sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as string,",
						"          Name as string,",
						"          Gender as string,",
						"          Age as string,",
						"          {Height (cm)} as string,",
						"          {Weight (kg)} as string,",
						"          Team as string,",
						"          NOC as string,",
						"          Games as string,",
						"          Year as string,",
						"          Season as string,",
						"          City as string,",
						"          Sport as string,",
						"          Event as string,",
						"          Medal as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> silversink",
						"split3@bronze sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as string,",
						"          Name as string,",
						"          Gender as string,",
						"          Age as string,",
						"          {Height (cm)} as string,",
						"          {Weight (kg)} as string,",
						"          Team as string,",
						"          NOC as string,",
						"          Games as string,",
						"          Year as string,",
						"          Season as string,",
						"          City as string,",
						"          Sport as string,",
						"          Event as string,",
						"          Medal as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> bronzesink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2016medalscs2')]",
				"[concat(variables('factoryId'), '/datasets/goldcs2')]",
				"[concat(variables('factoryId'), '/datasets/silvercs2')]",
				"[concat(variables('factoryId'), '/datasets/bronzecs2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinecasestudy2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow cs2",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "set time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflowcs2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"goldsink": {},
									"silversink": {},
									"bronzesink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "set time",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "status",
							"value": {
								"value": "@utcNow()",
								"type": "Expression"
							}
						}
					},
					{
						"name": "end time",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Data flow cs2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "status",
							"value": {
								"value": "@utcNow()",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"status": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflowcs2')]"
			]
		}
	]
}